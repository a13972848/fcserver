package webservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * 
 */
@WebService(name = "WebServiceSoap", targetNamespace = "YuanYT.RemotingCall")
public interface WebServiceSoap {

	/**
	 * 
	 * @param byteHTLoader
	 * @return returns webservice.GetUserDataResponse.GetUserDataResult
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getUserData")
	@WebResult(name = "getUserDataResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getUserData", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetUserData")
	@ResponseWrapper(localName = "getUserDataResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetUserDataResponse")
	public webservice.GetUserDataResponse.GetUserDataResult getUserData(
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader);

	/**
	 * 
	 * @param byteHTLoader
	 * @return returns webservice.GetCompanyDataResponse.GetCompanyDataResult
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getCompanyData")
	@WebResult(name = "getCompanyDataResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getCompanyData", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetCompanyData")
	@ResponseWrapper(localName = "getCompanyDataResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetCompanyDataResponse")
	public webservice.GetCompanyDataResponse.GetCompanyDataResult getCompanyData(
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader);

	/**
	 * 
	 * @param sMSGType
	 * @param byteHTLoader
	 * @param sUpdateTime
	 * @return returns webservice.GetUpdateMSGResponse.GetUpdateMSGResult
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getUpdateMSG")
	@WebResult(name = "getUpdateMSGResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getUpdateMSG", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetUpdateMSG")
	@ResponseWrapper(localName = "getUpdateMSGResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetUpdateMSGResponse")
	public webservice.GetUpdateMSGResponse.GetUpdateMSGResult getUpdateMSG(
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader,
			@WebParam(name = "sUpdateTime", targetNamespace = "YuanYT.RemotingCall") String sUpdateTime,
			@WebParam(name = "sMSGType", targetNamespace = "YuanYT.RemotingCall") String sMSGType);

	/**
	 * 
	 * @param byteHTLoader
	 * @return returns boolean
	 */
	@WebMethod(action = "YuanYT.RemotingCall/writeMSG")
	@WebResult(name = "writeMSGResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "writeMSG", targetNamespace = "YuanYT.RemotingCall", className = "webservice.WriteMSG")
	@ResponseWrapper(localName = "writeMSGResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.WriteMSGResponse")
	public boolean writeMSG(
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader);

	/**
	 * 
	 * @param sAppCode
	 * @param sVersion
	 * @param byteHTLoader
	 * @param sYear
	 * @param sCompanyCode
	 * @return returns byte[]
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getDBStructure")
	@WebResult(name = "getDBStructureResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getDBStructure", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetDBStructure")
	@ResponseWrapper(localName = "getDBStructureResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetDBStructureResponse")
	public byte[] getDBStructure(
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader,
			@WebParam(name = "sCompanyCode", targetNamespace = "YuanYT.RemotingCall") String sCompanyCode,
			@WebParam(name = "sAppCode", targetNamespace = "YuanYT.RemotingCall") String sAppCode,
			@WebParam(name = "sYear", targetNamespace = "YuanYT.RemotingCall") String sYear,
			@WebParam(name = "sVersion", targetNamespace = "YuanYT.RemotingCall") String sVersion);

	/**
	 * 
	 * @param sVersion
	 * @param byteHTLoader
	 * @return returns byte[]
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getDemoDBStructure")
	@WebResult(name = "getDemoDBStructureResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getDemoDBStructure", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetDemoDBStructure")
	@ResponseWrapper(localName = "getDemoDBStructureResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetDemoDBStructureResponse")
	public byte[] getDemoDBStructure(
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader,
			@WebParam(name = "sVersion", targetNamespace = "YuanYT.RemotingCall") String sVersion);

	/**
	 * 
	 * @param sSQL
	 * @param byteHTLoader
	 * @param byteHTCorp
	 * @return returns webservice.ExecSQLResponse.ExecSQLResult
	 */
	@WebMethod(action = "YuanYT.RemotingCall/execSQL")
	@WebResult(name = "execSQLResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "execSQL", targetNamespace = "YuanYT.RemotingCall", className = "webservice.ExecSQL")
	@ResponseWrapper(localName = "execSQLResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.ExecSQLResponse")
	public webservice.ExecSQLResponse.ExecSQLResult execSQL(
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader,
			@WebParam(name = "byteHTCorp", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTCorp,
			@WebParam(name = "sSQL", targetNamespace = "YuanYT.RemotingCall") String sSQL);

	/**
	 * 
	 * @param byteHTFixedCondition
	 * @param sServerCode
	 * @param sAssembly
	 * @param byteHTCorp
	 * @return returns webservice.GetWebDataResponse.GetWebDataResult
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getWebData")
	@WebResult(name = "getWebDataResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getWebData", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetWebData")
	@ResponseWrapper(localName = "getWebDataResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetWebDataResponse")
	public webservice.GetWebDataResponse.GetWebDataResult getWebData(
			@WebParam(name = "sAssembly", targetNamespace = "YuanYT.RemotingCall") String sAssembly,
			@WebParam(name = "byteHTCorp", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTCorp,
			@WebParam(name = "byteHTFixedCondition", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTFixedCondition,
			@WebParam(name = "sServerCode", targetNamespace = "YuanYT.RemotingCall") String sServerCode);

	/**
	 * 
	 * @param byteHTFixedCondition
	 * @param sAssembly
	 * @param byteHTLoader
	 * @param byteHTCorp
	 * @return returns webservice.GetEAIWebDataResponse.GetEAIWebDataResult
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getEAIWebData")
	@WebResult(name = "getEAIWebDataResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getEAIWebData", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIWebData")
	@ResponseWrapper(localName = "getEAIWebDataResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIWebDataResponse")
	public webservice.GetEAIWebDataResponse.GetEAIWebDataResult getEAIWebData(
			@WebParam(name = "sAssembly", targetNamespace = "YuanYT.RemotingCall") String sAssembly,
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader,
			@WebParam(name = "byteHTCorp", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTCorp,
			@WebParam(name = "byteHTFixedCondition", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTFixedCondition);

	/**
	 * 
	 * @param byteHTFixedCondition
	 * @param sAssembly
	 * @param byteHTLoader
	 * @param byteHTCorp
	 * @return returns
	 *         webservice.GetEAIWebDataNBDWResponse.GetEAIWebDataNBDWResult
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getEAIWebDataNBDW")
	@WebResult(name = "getEAIWebDataNBDWResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getEAIWebDataNBDW", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIWebDataNBDW")
	@ResponseWrapper(localName = "getEAIWebDataNBDWResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIWebDataNBDWResponse")
	public webservice.GetEAIWebDataNBDWResponse.GetEAIWebDataNBDWResult getEAIWebDataNBDW(
			@WebParam(name = "sAssembly", targetNamespace = "YuanYT.RemotingCall") String sAssembly,
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader,
			@WebParam(name = "byteHTCorp", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTCorp,
			@WebParam(name = "byteHTFixedCondition", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTFixedCondition);

	/**
	 * 
	 * @param byteHTFixedCondition
	 * @param sAssembly
	 * @param byteHTLoader
	 * @param byteHTCorp
	 * @return returns
	 *         webservice.GetEAIWebDataNBDWSysResponse.GetEAIWebDataNBDWSysResult
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getEAIWebDataNBDWSys")
	@WebResult(name = "getEAIWebDataNBDWSysResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getEAIWebDataNBDWSys", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIWebDataNBDWSys")
	@ResponseWrapper(localName = "getEAIWebDataNBDWSysResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIWebDataNBDWSysResponse")
	public webservice.GetEAIWebDataNBDWSysResponse.GetEAIWebDataNBDWSysResult getEAIWebDataNBDWSys(
			@WebParam(name = "sAssembly", targetNamespace = "YuanYT.RemotingCall") String sAssembly,
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader,
			@WebParam(name = "byteHTCorp", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTCorp,
			@WebParam(name = "byteHTFixedCondition", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTFixedCondition);

	/**
	 * 
	 * @param sDataType
	 * @param byteHTFixedCondition
	 * @param byteHTLoader
	 * @param byteHTCorp
	 * @return returns
	 *         webservice.GetEAIWebDataQMYSResponse.GetEAIWebDataQMYSResult
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getEAIWebDataQMYS")
	@WebResult(name = "getEAIWebDataQMYSResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getEAIWebDataQMYS", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIWebDataQMYS")
	@ResponseWrapper(localName = "getEAIWebDataQMYSResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIWebDataQMYSResponse")
	public webservice.GetEAIWebDataQMYSResponse.GetEAIWebDataQMYSResult getEAIWebDataQMYS(
			@WebParam(name = "sDataType", targetNamespace = "YuanYT.RemotingCall") String sDataType,
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader,
			@WebParam(name = "byteHTCorp", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTCorp,
			@WebParam(name = "byteHTFixedCondition", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTFixedCondition);

	/**
	 * 
	 * @param sHTFixedCondition
	 * @param sDataType
	 * @param sHTCorp
	 * @param sHTLoader
	 * @return returns java.lang.String
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getEAIWebDataQMYSforJava")
	@WebResult(name = "getEAIWebDataQMYSforJavaResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getEAIWebDataQMYSforJava", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIWebDataQMYSforJava")
	@ResponseWrapper(localName = "getEAIWebDataQMYSforJavaResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIWebDataQMYSforJavaResponse")
	public String getEAIWebDataQMYSforJava(
			@WebParam(name = "sDataType", targetNamespace = "YuanYT.RemotingCall") String sDataType,
			@WebParam(name = "sHTLoader", targetNamespace = "YuanYT.RemotingCall") String sHTLoader,
			@WebParam(name = "sHTCorp", targetNamespace = "YuanYT.RemotingCall") String sHTCorp,
			@WebParam(name = "sHTFixedCondition", targetNamespace = "YuanYT.RemotingCall") String sHTFixedCondition);

	/**
	 * 
	 * @param sServerCode
	 * @param byteHTLoader
	 * @return returns webservice.GetEAIIFResponse.GetEAIIFResult
	 */
	@WebMethod(action = "YuanYT.RemotingCall/getEAIIF")
	@WebResult(name = "getEAIIFResult", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "getEAIIF", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIIF")
	@ResponseWrapper(localName = "getEAIIFResponse", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetEAIIFResponse")
	public webservice.GetEAIIFResponse.GetEAIIFResult getEAIIF(
			@WebParam(name = "sServerCode", targetNamespace = "YuanYT.RemotingCall") String sServerCode,
			@WebParam(name = "byteHTLoader", targetNamespace = "YuanYT.RemotingCall") byte[] byteHTLoader);

	/**
	 * 
	 * @param sServerCode
	 * @param sAssembly
	 * @param parameters
	 * @return returns java.lang.Object
	 */
	@WebMethod(operationName = "GetWebData2", action = "YuanYT.RemotingCall/GetWebData2")
	@WebResult(name = "GetWebData2Result", targetNamespace = "YuanYT.RemotingCall")
	@RequestWrapper(localName = "GetWebData2", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetWebData2")
	@ResponseWrapper(localName = "GetWebData2Response", targetNamespace = "YuanYT.RemotingCall", className = "webservice.GetWebData2Response")
	public Object getWebData2(
			@WebParam(name = "sAssembly", targetNamespace = "YuanYT.RemotingCall") String sAssembly,
			@WebParam(name = "sServerCode", targetNamespace = "YuanYT.RemotingCall") String sServerCode,
			@WebParam(name = "parameters", targetNamespace = "YuanYT.RemotingCall") ArrayOfAnyType parameters);

}
